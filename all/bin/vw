#!/bin/sh

import videos.sh
import git:install/path.sh

_ACTION=watch

_git_init

_watch() {
	_VIDEO_KEY=$(basename $_VIDEO_MEDIA_FILE | $_CONF_INSTALL_GNU_GREP -Po "\-{0,1}[0-9A-Za-z_-]{10}[048AEIMQUYcgkosw]\." | tail -1 | sed -e "s/^\-//" -e "s/\.$//" -e "s/\-/\\\-/g")
	_VIDEO_FILE=$(grep $_VIDEO_KEY downloaded -rl)

	if [ -z "$_VIDEO_FILE" ]; then
		_error "downloaded video not found for: $_VIDEO_KEY" 2
	fi

	_video_read_meta
	_video_meta

	_play
	_comments

	_move_watched_video
}

_play() {
	$_CONF_VIDEOS_VIDEO_PLAYER $_OPTN_VIDEOS_ARGUMENTS $_VIDEO_MEDIA_FILE 2>&1 >/dev/null
}

_comments() {
	_read_if "Please enter comments (or hit enter for none)" _COMMENTS

	if [ -n "$_COMMENTS" ]; then
		printf '\n' >>$_VIDEO_FILE
		printf '%s\n' "$_COMMENTS" >>$_VIDEO_FILE
	fi
}

_move_watched_video() {
	_read_if "Retain video?" _RETAIN "N/y"

	if [ "$_RETAIN" = "y" ]; then
		_videos_git $_VIDEO_FILE
	else
		_VIDEO_WATCHED_FILE=watched/$(_target)

		rm -f $_VIDEO_MEDIA_FILE

		_remove_empty_directories $_CONF_VIDEOS_DOWNLOAD_PATH

		mkdir -p $(dirname $_VIDEO_WATCHED_FILE)

		git mv $_VIDEO_FILE $_VIDEO_WATCHED_FILE

		_videos_git $_VIDEO_FILE $_VIDEO_WATCHED_FILE
	fi
}

_watch_specified() {
	_VIDEO_FILE=$1

	if [ ! -e $_VIDEO_FILE ]; then
		_VIDEO_MEDIA_FILE=$(find $_CONF_VIDEOS_DOWNLOAD_PATH -type f ! -name '.part' | grep $_VIDEO_FILE)
	fi

	if [ -z "$_VIDEO_MEDIA_FILE" ]; then
		return 1
	fi

	_watch
}

_watch_clipboard() {
	_videos_clipboard_get

	if [ -n "$_VIDEO_URL" ]; then
		_VIDEO_KEY=$(printf '%s' $_VIDEO_URL | sed -e "s/^.*\=//")
		if [ -n "$_VIDEO_KEY" ]; then
			_clipboard_clear

			_watch_specified $_VIDEO_KEY
			return $?
		fi
	fi

	return 1
}

_watch_all() {
	for _VIDEO_MEDIA_FILE in $(find $_CONF_VIDEOS_DOWNLOAD_PATH -type f ! -name '*.part'); do
		_watch
	done
}

if [ "$#" -eq "1" ]; then
	_watch_specified $1
else
	_watch_clipboard || _watch_all
fi
